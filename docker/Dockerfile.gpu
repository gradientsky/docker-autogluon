ARG CUDA_VER=10.2
ARG LINUX_VER=ubuntu18.04
ARG PYTHON_VERSION=3.7.10
ARG PYTHON_VER=3.7
ARG RAPIDS_VER=0.19
ARG FROM_IMAGE=rapidsai/rapidsai-core

FROM ${FROM_IMAGE}:${RAPIDS_VER}-cuda${CUDA_VER}-base-${LINUX_VER}-py${PYTHON_VER}
ARG CUDA_VER
ARG AUTOGLUON_VERSION=0.3.1
ARG MXNET_VER=1.7.*

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONIOENCODING=UTF-8 \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    MXNET_CUDNN_LIB_CHECKING=0 \
    SAGEMAKER_TRAINING_MODULE=sagemaker_mxnet_container.training:main \
    LD_LIBRARY_PATH=/opt/conda/envs/rapids/lib:/usr/local/lib:$LD_LIBRARY_PATH \
    PATH=/opt/conda/envs/rapids/bin:/usr/local/bin:$PATH

RUN apt-get update \
 && apt-get -y upgrade \
 && apt-get install -y --no-install-recommends \
    build-essential \
    libgl1-mesa-glx \
    ffmpeg \
    libsm6 \
    libxext6 \
    emacs \
 && apt-get autoremove -y \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/* \
 && rm -rf /tmp/*

RUN source activate rapids \
 && pip install --no-cache-dir -U pip \
 && pip install --no-cache-dir -U setuptools wheel \
 && pip install --no-cache-dir -U --no-use-pep517 mxnet-cu$(echo ${CUDA_VER} | sed 's/\.//')==${MXNET_VER} \
 && pip install --no-cache-dir -U autogluon==${AUTOGLUON_VERSION} \
 && pip install --no-cache-dir -U sagemaker-mxnet-training \
 && pip install --no-cache-dir -U cupy-cuda102==9.2.0 \
 && pip uninstall -y \
    datashader \
    ipykernel \
    ipython \
    ipython-genutils \
    ipywidgets \
    jupyter-client \
    jupyter-core \
    jupyter-packaging \
    jupyter-server \
    jupyter-server-proxy \
    jupyterlab \
    jupyterlab-nvdashboard \
    jupyterlab-pygments \
    jupyterlab-server \
    jupyterlab-widgets \
    matplotlib-inline \
    nbclient \
    nbconvert \
    nbformat \
    notebook \
    panel \
    pydeck \
    pyppeteer \
    traitlets \
    websockets \
    widgetsnbextension

WORKDIR /home/

# Allow OpenSSH to talk to containers without asking for confirmation
RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new \
 && echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new \
 && mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config

RUN rm -rf /root/.ssh/ && \
  mkdir -p /root/.ssh/ && \
  ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && \
  cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys \
  && printf "Host *\n StrictHostKeyChecking no\n" >> /root/.ssh/config

# This is here to make our installed version of OpenCV work.
# https://stackoverflow.com/questions/29274638/opencv-libdc1394-error-failed-to-initialize-libdc1394
# TODO: Should we be installing OpenCV in our image like this? Is there another way we can fix this?
RUN ln -s /dev/null /dev/raw1394

CMD ["/bin/bash"]
